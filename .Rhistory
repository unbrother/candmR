openxlsx::writeData(wb, sheet = paste0("R", elem), exp_table)
openxlsx::saveWorkbook(wb, file = file_name, overwrite = TRUE)
}
wb <- openxlsx::createWorkbook("n")
for (elem in 1:length(x)) {
exp_table <- x[[elem]]
openxlsx::addWorksheet(wb, paste0("R", elem))
openxlsx::writeData(wb, sheet = paste0("R", elem), exp_table)
openxlsx::saveWorkbook(wb, file = file_name, overwrite = TRUE)
}
wb <- openxlsx::createWorkbook("n")
for (elem in 1:length(x)) {
exp_table <- x[[elem]]
openxlsx::addWorksheet(wb, paste0("R", elem))
openxlsx::writeData(wb, sheet = paste0("R", elem), exp_table)
}
openxlsx::saveWorkbook(wb, file = file_name, overwrite = TRUE)
wb <- openxlsx::createWorkbook("n")
for (elem in 1:length(x)) {
exp_table <- x[[elem]]
openxlsx::addWorksheet(wb, paste0("R", elem))
openxlsx::writeData(wb, sheet = paste0("R", elem), exp_table)
}
openxlsx::saveWorkbook(wb, file = file_name, overwrite = TRUE)
tt_export <- function(x, file_name, type) {
if (type == "matrix") {
wb <- openxlsx::createWorkbook("n")
for (elem in 1:length(x)) {
exp_table <- x[[elem]]
openxlsx::addWorksheet(wb, paste0("R", elem))
openxlsx::writeData(wb, sheet = paste0("R", elem), exp_table)
}
openxlsx::saveWorkbook(wb, file = file_name, overwrite = TRUE)
} else if (type == "dataframe") {
} else if (type == "shp") {
}
}
tt_export(time, "/Users/pepe/Downloads/routes_matrix.xlsx", "matrix")
tt_export(times, "/Users/pepe/Downloads/routes_matrix.xlsx", "matrix")
tt_export(times, "/Users/pepe/Downloads/routes_matrix.xlsx", "matrix")
tt_matrix(travel_times)
View(times)
View(travel_times)
tt_export <- function(x, file_name, type) {
if (type == "matrix") {
wb <- openxlsx::createWorkbook("n")
for (elem in 1:length(x)) {
exp_table <- x[[elem]]
openxlsx::addWorksheet(wb, paste0("R", elem))
openxlsx::writeData(wb, sheet = paste0("R", elem), exp_table)
}
openxlsx::saveWorkbook(wb, file = file_name, overwrite = TRUE)
} else if (type == "dataframe") {
wb <- openxlsx::createWorkbook("n")
openxlsx::addWorksheet(wb, "Data")
openxlsx::writeData(wb, sheet = "Data", x)
} else if (type == "shp") {
}
}
tt_export <- function(x, file_name, type) {
if (type == "matrix") {
wb <- openxlsx::createWorkbook("n")
for (elem in 1:length(x)) {
exp_table <- x[[elem]]
openxlsx::addWorksheet(wb, paste0("R", elem))
openxlsx::writeData(wb, sheet = paste0("R", elem), exp_table)
}
openxlsx::saveWorkbook(wb, file = file_name, overwrite = TRUE)
} else if (type == "dataframe") {
wb <- openxlsx::createWorkbook("n")
openxlsx::addWorksheet(wb, "Data")
openxlsx::writeData(wb, sheet = "Data", x)
} else if (type == "shp") {
}
}
tt_export(times, "/Users/pepe/Downloads/travel_times.xlsx", "dataframe")
tt_export(travel_times, "/Users/pepe/Downloads/travel_times.xlsx", "dataframe")
tt_export(travel_times, "/Users/pepe/Downloads/travel_times.xlsx", "dataframe")
tt_export(times, "/Users/pepe/Downloads/routes_matrix.xlsx", "matrix")
tt_export <- function(x, file_name, type) {
if (type == "matrix") {
wb <- openxlsx::createWorkbook("n")
for (elem in 1:length(x)) {
exp_table <- x[[elem]]
openxlsx::addWorksheet(wb, paste0("R", elem))
openxlsx::writeData(wb, sheet = paste0("R", elem), exp_table)
}
openxlsx::saveWorkbook(wb, file = file_name, overwrite = TRUE)
} else if (type == "dataframe") {
wb <- openxlsx::createWorkbook("n")
openxlsx::addWorksheet(wb, "Data")
openxlsx::writeData(wb, sheet = "Data", x)
} else if (type == "shp") {
}
}
tt_export(travel_times, "/Users/pepe/Downloads/travel_times.xlsx", "dataframe")
x <- travel_times
wb <- openxlsx::createWorkbook("n")
openxlsx::addWorksheet(wb, "Data")
openxlsx::writeData(wb, sheet = "Data", x)
x
df <- x %>% sf::st_drop_geometry()
openxlsx::writeData(wb, sheet = "Data", df)
tt_export <- function(x, file_name, type) {
if (type == "matrix") {
wb <- openxlsx::createWorkbook("n")
for (elem in 1:length(x)) {
exp_table <- x[[elem]]
openxlsx::addWorksheet(wb, paste0("R", elem))
openxlsx::writeData(wb, sheet = paste0("R", elem), exp_table)
}
openxlsx::saveWorkbook(wb, file = file_name, overwrite = TRUE)
} else if (type == "dataframe") {
df <- x %>% sf::st_drop_geometry()
wb <- openxlsx::createWorkbook("n")
openxlsx::addWorksheet(wb, "Data")
openxlsx::writeData(wb, sheet = "Data", df)
} else if (type == "shp") {
}
}
tt_export(travel_times, "/Users/pepe/Downloads/travel_times.xlsx", "dataframe")
tt_export(travel_times, "/Users/pepe/Downloads/travel_times.xlsx", "dataframe")
tt_export(times, "/Users/pepe/Downloads/routes_matrix.xlsx", "matrix")
df <- x %>% sf::st_drop_geometry()
wb <- openxlsx::createWorkbook("n")
openxlsx::addWorksheet(wb, "Data")
openxlsx::writeData(wb, sheet = "Data", df)
df <- x %>% sf::st_drop_geometry()
wb <- openxlsx::createWorkbook("n")
openxlsx::addWorksheet(wb, "Data")
openxlsx::writeData(wb, sheet = "Data", df)
df
wb <- openxlsx::createWorkbook("n")
openxlsx::addWorksheet(wb, "Data")
openxlsx::writeData(wb, sheet = "Data", df)
tt_export <- function(x, file_name, type) {
if (type == "matrix") {
wb <- openxlsx::createWorkbook("n")
for (elem in 1:length(x)) {
exp_table <- x[[elem]]
openxlsx::addWorksheet(wb, paste0("R", elem))
openxlsx::writeData(wb, sheet = paste0("R", elem), exp_table)
}
openxlsx::saveWorkbook(wb, file = file_name, overwrite = TRUE)
} else if (type == "dataframe") {
df <- x %>% sf::st_drop_geometry()
wb <- openxlsx::createWorkbook("n")
openxlsx::addWorksheet(wb, "Data")
openxlsx::writeData(wb, sheet = "Data", df)
openxlsx::saveWorkbook(wb, file = file_name, overwrite = TRUE)
} else if (type == "shp") {
}
}
tt_export(times, "/Users/pepe/Downloads/routes_matrix.xlsx", "matrix")
tt_export(travel_times, "/Users/pepe/Downloads/travel_times.xlsx", "dataframe")
tt_export <- function(x, file_name, type) {
if (type == "matrix") {
wb <- openxlsx::createWorkbook("n")
for (elem in 1:length(x)) {
exp_table <- x[[elem]]
openxlsx::addWorksheet(wb, paste0("R", elem))
openxlsx::writeData(wb, sheet = paste0("R", elem), exp_table)
}
openxlsx::saveWorkbook(wb, file = file_name, overwrite = TRUE)
} else if (type == "dataframe") {
df <- x %>% sf::st_drop_geometry()
wb <- openxlsx::createWorkbook("n")
openxlsx::addWorksheet(wb, "Data")
openxlsx::writeData(wb, sheet = "Data", df)
openxlsx::saveWorkbook(wb, file = file_name, overwrite = TRUE)
} else if (type == "shp") {
sf::st_write(x, file_name, append = FALSE)
}
}
tt_export(travel_times, "/Users/pepe/Downloads/travel_times.shp", "shp")
?st_write
View(travel_times)
tt_export <- function(x, file_name, type) {
if (type == "matrix") {
wb <- openxlsx::createWorkbook("n")
for (elem in 1:length(x)) {
exp_table <- x[[elem]]
openxlsx::addWorksheet(wb, paste0("R", elem))
openxlsx::writeData(wb, sheet = paste0("R", elem), exp_table)
}
openxlsx::saveWorkbook(wb, file = file_name, overwrite = TRUE)
} else if (type == "dataframe") {
df <- x %>% sf::st_drop_geometry()
wb <- openxlsx::createWorkbook("n")
openxlsx::addWorksheet(wb, "Data")
openxlsx::writeData(wb, sheet = "Data", df)
openxlsx::saveWorkbook(wb, file = file_name, overwrite = TRUE)
} else if (type == "shp") {
colnames(x) <- c("alt_id", "leg_id", "summary",
"dist_m", "dist_txt", "dur_s", "dur_txt",
"dur", "d_tr_s", "d_tr_txt", "dep_time",
"arr_time", "TOD", "route", "Code",
"geometry", "travel_time", "dist",
"speed")
sf::st_write(x, file_name, append = FALSE)
}
}
tt_export(travel_times, "/Users/pepe/Downloads/travel_times.shp", "shp")
x
tt_export <- function(x, file_name, type) {
if (type == "matrix") {
wb <- openxlsx::createWorkbook("n")
for (elem in 1:length(x)) {
exp_table <- x[[elem]]
openxlsx::addWorksheet(wb, paste0("R", elem))
openxlsx::writeData(wb, sheet = paste0("R", elem), exp_table)
}
openxlsx::saveWorkbook(wb, file = file_name, overwrite = TRUE)
} else if (type == "dataframe") {
df <- x %>% sf::st_drop_geometry()
wb <- openxlsx::createWorkbook("n")
openxlsx::addWorksheet(wb, "Data")
openxlsx::writeData(wb, sheet = "Data", df)
openxlsx::saveWorkbook(wb, file = file_name, overwrite = TRUE)
} else if (type == "shp") {
colnames(x) <- c("alt_id", "leg_id", "summary",
"dist_m", "dist_txt", "dur_s", "dur_txt",
"d_tr_s", "d_tr_txt", "dep_time",
"arr_time", "TOD", "route", "Code",
"geometry", "travel_time", "dist",
"speed")
sf::st_write(x, file_name, append = FALSE)
}
}
tt_export(travel_times, "/Users/pepe/Downloads/travel_times.shp", "shp")
tt_export <- function(x, file_name, type) {
if (type == "matrix") {
wb <- openxlsx::createWorkbook("n")
for (elem in 1:length(x)) {
exp_table <- x[[elem]]
openxlsx::addWorksheet(wb, paste0("R", elem))
openxlsx::writeData(wb, sheet = paste0("R", elem), exp_table)
}
openxlsx::saveWorkbook(wb, file = file_name, overwrite = TRUE)
} else if (type == "dataframe") {
df <- x %>% sf::st_drop_geometry()
wb <- openxlsx::createWorkbook("n")
openxlsx::addWorksheet(wb, "Data")
openxlsx::writeData(wb, sheet = "Data", df)
openxlsx::saveWorkbook(wb, file = file_name, overwrite = TRUE)
} else if (type == "shp") {
colnames(x) <- c("alt_id", "leg_id", "summary",
"dist_m", "dist_txt", "dur_s", "dur_txt",
"d_tr_s", "d_tr_txt", "dep_time",
"arr_time", "TOD", "route", "Code",
"geometry", "traveltime", "dist",
"speed")
sf::st_write(x, file_name, append = FALSE)
}
}
tt_export(travel_times, "/Users/pepe/Downloads/travel_times.shp", "shp")
aver <- st_read("/Users/pepe/Downloads/travel_times.shp")
aver <- read_sf("/Users/pepe/Downloads/travel_times.shp")
aver <- sf::read_sf("/Users/pepe/Downloads/travel_times.shp")
library(tmap)
tmap_mode("view")
qtm(aver)
load_all()
library(candmR)
travel_times <- tt_get_traveltime(points, tod_list, key = key)
travel_times <- tt_get_traveltime(points, tod_list, key = key)
points
tod_list
tod_list <- tt_tod_data(table_path = "/Users/pepe/Downloads/Inputs/GoogleTravelTime_Kw.xlsx")
tod_list
points_path
details_path
points <- tt_gather_points(points_path, details_path)
points
details_path
points
travel_times <- tt_get_traveltime(points, tod_list, key = key)
View(travel_times)
View(tod_list)
View(travel_times)
View(tod_list)
tod_list
tod_list <- tt_tod_data(table_path = "/Users/pepe/Downloads/Inputs/GoogleTravelTime_Kw.xlsx")
tod_list
travel_times <- tt_get_traveltime(points, tod_list, key = key)
times <- tt_matrix(travel_times)
times
times_tod <- tt_matrix(travel_times, group_tod = TRUE)
times_tod
View(times)
speeds <- tt_matrix(travel_times, summ_by = "speed")
speeds_tod <- tt_matrix(travel_times, summ_by = "speed", group_tod = TRUE)
dists <- tt_matrix(travel_times, summ_by = "distance")
dists_tod <- tt_matrix(travel_times, summ_by = "distance", group_tod = TRUE)
tt_export(speeds, "/Users/pepe/Downloads/speeds_matrix.xlsx", "matrix")
tt_export(speeds, "/Users/pepe/Downloads/speedsTOD_matrix.xlsx", "matrix")
tt_export(speeds_tod, "/Users/pepe/Downloads/speedsTOD_matrix.xlsx", "matrix")
library(candmR)
check()
document()
rm(list = c("tt_export"))
document()
load_all()
load_all()
library(candmR)
library(candmR)
document()
library(candmR)
use_r(stations)
use_r("stations")
View(stations)
roxygen2::roxygenize()
document()
library(candmR)
check()
use_r("attributes")
attributes <- ms2_attributes("/Users/pepe/Library/CloudStorage/OneDrive-C&MAssociates,Inc/R startups/Ms2SoftR/inputs/input_file.xlsx")
attributes
View(attributes)
View(attributes)
View(attributes)
roxygen2::roxygenize()
document()
library(candmR)
check()
load_all()
library(candmR)
tt_export(speeds, "/Users/pepe/Downloads/speeds_matrix.xlsx", "matrix")
tt_export(speeds_tod, "/Users/pepe/Downloads/speedsTOD_matrix.xlsx", "matrix")
tt_export(travel_times, "/Users/pepe/Downloads/travel_times.xlsx", "dataframe")
tt_export(travel_times, "/Users/pepe/Downloads/travel_times.shp", "shp")
aver <- sf::read_sf("/Users/pepe/Downloads/travel_times.shp")
tmap_mode("view")
qtm(aver)
View(x)
x %>%
mutate(dep_time = lubridate::hms(departure_time))
x %>%
dplyr::mutate(dep_time = lubridate::hms(departure_time))
x %>%
dplyr::mutate(dep_time = lubridate::ymd_hms(departure_time))
library(candmR)
tt_export(travel_times, "/Users/pepe/Downloads/travel_times.shp", "shp")
aver <- sf::read_sf("/Users/pepe/Downloads/travel_times.shp")
tmap_mode("view")
qtm(aver)
x %>%
dplyr::mutate(dep_time = lubridate::ymd_hms(departure_time) %>%
as.character())
library(candmR)
tt_export(travel_times, "/Users/pepe/Downloads/travel_times.shp", "shp")
aver <- sf::read_sf("/Users/pepe/Downloads/travel_times.shp")
tmap_mode("view")
qtm(aver)
x %>%
dplyr::mutate(departure_time = lubridate::ymd_hms(departure_time) %>%
as.character(),
dep_hour = lubridate::hour(departure_time))
x %>%
dplyr::mutate(departure_time = lubridate::ymd_hms(departure_time) %>%
as.character(),
dep_hour = lubridate::hour(departure_time)) %>%
dplyr::select(alternative_id, leg_id, summary, distance_m, distance_text,
duration_s, duration_text, duration_in_traffic_s,
duration_in_traffic_text, departure_time, dep_hour,
arrival_time, TOD,
route, Code, travel_time, speed)
library(candmR)
tt_export(travel_times, "/Users/pepe/Downloads/travel_times.shp", "shp")
library(candmR)
tt_export(travel_times, "/Users/pepe/Downloads/travel_times.shp", "shp")
x %>%
dplyr::mutate(departure_time = lubridate::ymd_hms(departure_time) %>%
as.character(),
dep_hour = lubridate::hour(departure_time)) %>%
dplyr::select(alternative_id, leg_id, summary, distance_m, distance_text,
duration_s, duration_text, duration_in_traffic_s,
duration_in_traffic_text, departure_time, dep_hour,
arrival_time, TOD,
route, Code, travel_time, speed)
library(candmR)
tt_export(travel_times, "/Users/pepe/Downloads/travel_times.shp", "shp")
aver <- sf::read_sf("/Users/pepe/Downloads/travel_times.shp")
qtm(aver)
tmap_mode("view")
qtm(aver)
x <- x %>%
dplyr::mutate(departure_time = lubridate::ymd_hms(departure_time) %>%
as.character(),
dep_hour = lubridate::hour(departure_time)) %>%
dplyr::select(alternative_id, leg_id, summary, distance_m, distance_text,
duration_s, duration_text, duration_in_traffic_s,
duration_in_traffic_text, departure_time, dep_hour,
arrival_time, TOD,
route, Code, travel_time, speed)
colnames(x) <- c("alt_id", "leg_id", "summary",
"dist_m", "dist_txt", "dur_s", "dur_txt",
"d_tr_s", "d_tr_txt", "dep_time", "dep_hour",
"TOD", "route", "Code",
"arr_time", "traveltime", "dist",
"speed", "geometry")
colnames(x) <- c("alt_id", "leg_id", "summary",
"dist_m", "dist_txt", "dur_s", "dur_txt",
"d_tr_s", "d_tr_txt", "dep_time", "dep_hour",
"TOD", "route", "Code",
"arr_time", "traveltime", "dist",
"speed")
x
library(candmR)
tt_export(travel_times, "/Users/pepe/Downloads/travel_times.shp", "shp")
View(travel_times)
x <- travel_times %>%
dplyr::mutate(departure_time = lubridate::ymd_hms(departure_time) %>%
as.character(),
dep_hour = lubridate::hour(departure_time)) %>%
dplyr::select(alternative_id, leg_id, summary, distance_m, distance_text,
duration_s, duration_text, duration_in_traffic_s,
duration_in_traffic_text, departure_time, dep_hour,
arrival_time, TOD,
route, Code, travel_time, distance, speed)
colnames(x) <- c("alt_id", "leg_id", "summary",
"dist_m", "dist_txt", "dur_s", "dur_txt",
"d_tr_s", "d_tr_txt", "dep_time", "dep_hour",
"arr_time", "TOD", "route", "Code", "traveltime", "dist",
"speed", "geometry")
x <- travel_times %>%
dplyr::mutate(departure_time = lubridate::ymd_hms(departure_time) %>%
as.character(),
dep_hour = lubridate::hour(departure_time)) %>%
dplyr::select(alternative_id, leg_id, summary, distance_m, distance_text,
duration_s, duration_text, duration_in_traffic_s,
duration_in_traffic_text, departure_time, dep_hour,
arrival_time, TOD,
route, Code, travel_time, distance, speed)
View(x)
colnames(x) <- c("alt_id", "leg_id", "summary",
"dist_m", "dist_txt", "dur_s", "dur_txt",
"d_tr_s", "d_tr_txt", "dep_time", "dep_hour",
"arr_time", "TOD", "route", "Code", "traveltime", "dist",
"speed", "geometry")
View(x)
tt_export(travel_times, "/Users/pepe/Downloads/travel_times.shp", "shp")
library(candmR)
aver <- sf::read_sf("/Users/pepe/Downloads/travel_times.shp")
tmap_mode("view")
qtm(aver)
View(travel_times)
View(tod_list)
library(usethis)
use_testthat()
use_test(name = "tt_gather_points")
use_vignette(name = "ms2soft",
title = "MS2Soft Functions Usage")
use_vignette(name = "travel_time",
title = "Google Maps Directions Usage")
build_vignettes()
build_vignettes()
build_vignettes()
library(candmR)
document()
load_all()
check()
library(candmR)
load_all()
library(candmR)
build_vignettes()
devtools::build()
devtools::install(build_vignettes = T)
points_path
point_details
points_path
devtools::install(build_vignettes = T)
View(points)
points <- tt_gather_points(points_path, point_details)
travel_times <- tt_get_traveltime(points, tod_list, key = key)
points <- tt_gather_points(points_path, point_details)
View(points)
View(travel_times)
devtools::install(build_vignettes = T)
library(candmR)
document()
load_all()
devtools::install(build_vignettes = T)
library(candmR)
base_points <- tt_gather_points(points_path, point_details)
base_points <- tt_gather_points(points_path, point_details)
library(candmR)
base_points <- tt_gather_points(points_path, point_details)
use_data(base_points)
use_r("base_points")
View(base_points)
devtools::install(build_vignettes = T)
document()
library(candmR)
load_all()
check()
devtools::install(build_vignettes = T)
check()
View(travel_times)
use_data(travel_time)
use_data(travel_times)
use_r("travel_times")
names(travel_times)
View(travel_times)
document()
document()
library(candmR)
devtools::install(build_vignettes = T)
document()
devtools::install(build_vignettes = T)
check()
devtools::install(build_vignettes = T)
