dl_path = attributes[["dl_path"]]
dot = attributes[["dot"]]
offset = attributes[["offset"]]
a = attributes[["a"]]
}
dates_test <-  function(station, main_url, analysis_type = c("class", "perm", "short", "speed"),
offset, a, start_date, end_date, quiet = TRUE,
day_type = c("weekday", "weekend", "all"), sampling = TRUE,
sample_weeks = 1, stations_list, attributes) {
if (!missing(stations_list)) {
start_date <- paste0(stations_list[stations_list$type == analysis_type & stations_list$Loc_ID == station,
"start_year"] %>%
dplyr::pull(),
"-01-01") %>%
as.Date()
end_date <- paste0(stations_list[stations_list$type == analysis_type & stations_list$Loc_ID == station,
"end_year"] %>%
dplyr::pull(), "-12-31") %>%
as.Date()
}
if (!missing(attributes)) {
analysis_type = attributes[["analysis_type"]]
main_url = attributes[["main_url"]]
dl_path = attributes[["dl_path"]]
dot = attributes[["dot"]]
offset = attributes[["offset"]]
a = attributes[["a"]]
}
}
dates_test <-  function(station, main_url, analysis_type = c("class", "perm", "short", "speed"),
offset, a, start_date, end_date, quiet = TRUE,
day_type = c("weekday", "weekend", "all"), sampling = TRUE,
sample_weeks = 1, stations_list, attributes) {
if (!missing(stations_list)) {
start_date <- paste0(stations_list[stations_list$type == analysis_type & stations_list$Loc_ID == station,
"start_year"] %>%
dplyr::pull(),
"-01-01") %>%
as.Date()
end_date <- paste0(stations_list[stations_list$type == analysis_type & stations_list$Loc_ID == station,
"end_year"] %>%
dplyr::pull(), "-12-31") %>%
as.Date()
}
if (!missing(attributes)) {
analysis_type = attributes[["analysis_type"]]
main_url = attributes[["main_url"]]
dl_path = attributes[["dl_path"]]
dot = attributes[["dot"]]
offset = attributes[["offset"]]
a = attributes[["a"]]
}
return(start_date)
}
dates_test(stations_list, attributes)
dates_test <-  function(station = NULL, main_url = NULL, analysis_type = "short",
offset = NULL, a, start_date = NULL, end_date = NULL, quiet = TRUE,
day_type = "all", sampling = TRUE,
sample_weeks = 1, stations_list, attributes) {
if (!missing(stations_list)) {
start_date <- paste0(stations_list[stations_list$type == analysis_type & stations_list$Loc_ID == station,
"start_year"] %>%
dplyr::pull(),
"-01-01") %>%
as.Date()
end_date <- paste0(stations_list[stations_list$type == analysis_type & stations_list$Loc_ID == station,
"end_year"] %>%
dplyr::pull(), "-12-31") %>%
as.Date()
}
if (!missing(attributes)) {
analysis_type = attributes[["analysis_type"]]
main_url = attributes[["main_url"]]
dl_path = attributes[["dl_path"]]
dot = attributes[["dot"]]
offset = attributes[["offset"]]
a = attributes[["a"]]
}
return(start_date)
}
dates_test(station = station, stations_list = station_list, attributes = attributes)
dates_test(station = station, stations_list = stations_list, attributes = attributes)
ms2_dates_alt <-
function(station = NULL, main_url = NULL, analysis_type = "short",
offset = NULL, a, start_date = NULL, end_date = NULL, quiet = TRUE,
day_type = "all", sampling = TRUE,
sample_weeks = 1, stations_list, attributes) {
if (!missing(stations_list)) {
start_date <- paste0(stations_list[stations_list$type == analysis_type & stations_list$Loc_ID == station,
"start_year"] %>%
dplyr::pull(),
"-01-01") %>%
as.Date()
end_date <- paste0(stations_list[stations_list$type == analysis_type & stations_list$Loc_ID == station,
"end_year"] %>%
dplyr::pull(), "-12-31") %>%
as.Date()
}
if (!missing(attributes)) {
analysis_type = attributes[["analysis_type"]]
main_url = attributes[["main_url"]]
dl_path = attributes[["dl_path"]]
dot = attributes[["dot"]]
offset = attributes[["offset"]]
a = attributes[["a"]]
}
# Create vector of all days between starting and ending dates
dates_check <- seq(start_date, end_date, by = "1 day")
# Format dates to url style
days_of_year <- format(dates_check, format = "%m/%d/%Y")
# Creates Selenium driver object
rd <- RSelenium::rsDriver(browser = "firefox",
chromever = NULL)
# Access the client object
remDr <- rd$client
remDr$open()
# Navigate to the main MS2 site, which allows to keep a session open within
# their system, preventing timeouts
remDr$navigate(main_url)
# Empty dataframe of available dates
available_dates <- data.frame()
# Loop
for (day in days_of_year) {
if (quiet == FALSE) {
print(paste0("Working on station: ", station, " at ", day))
}
if (analysis_type == "class") {
url <- paste0(main_url,
"tcount_gcs.asp?offset=",
offset,
"&local_id=",
station,
"&a=",
a,
"&sdate=",
day,
"&jump_date=",
day,
"&classDate=&speedDate=&gapDate=&int=&type=class&count_type=class")
remDr$navigate(url)
available <- tryCatch({
remDr$findElement(using = "css selector",
".frmDtl tr:nth-child(3) td:nth-child(2)")$getElementText()[[1]]
}, error = function(e){NA_character_})
available_dates <- rbind(available_dates, cbind(available, day))
} else if (analysis_type == "perm") {
url <-
paste0(main_url,
"tcount.asp?offset=",
offset,
"&local_id=",
station,
"&a=",
a,
"&sdate=",
day)
# Navigate to the site containing the station by id, direction and date
remDr$navigate(url)
available <- tryCatch({
suppressMessages({
remDr$findElement(using = "css selector",
".frmDtl+ .frmDtl tr:nth-child(4) td")$getElementText()[[1]]
})}, error = function(e){NA_character_})
available_dates <- rbind(available_dates, cbind(available, day))
available_dates <- available_dates %>%
dplyr::group_by(ym = paste(lubridate::year(day), lubridate::month(day))) %>%
dplyr::slice_head(n = 1)
} else if (analysis_type == "short") {
url <-
paste0(main_url,
"tcount.asp?offset=",
offset,
"&local_id=",
station,
"&a=",
a,
"&sdate=",
day)
# Navigate to the site containing the station by id, direction and date
remDr$navigate(url)
available <- tryCatch({
suppressMessages({
remDr$findElement(using = "css selector",
".frmDtl+ .frmDtl tr:nth-child(4) td")$getElementText()[[1]]
})}, error = function(e){NA_character_})
available_dates <- rbind(available_dates, cbind(available, day))
}
}
rd$server$stop()
available_dates <- available_dates %>% dplyr::filter(available != " ")
if (day_type == "weekday") {
available_dates <- available_dates %>%
dplyr::mutate(weekday = weekdays(as.Date(day, "%m/%d/%Y"))) %>%
dplyr::filter(weekday %in% c("Tuesday", "Wednesday", "Thursday"))
} else if (day_type == "weekend") {
available_dates <- available_dates %>%
dplyr::mutate(weekday = weekdays(as.Date(day, "%m/%d/%Y"))) %>%
dplyr::filter(weekday %in% c("Saturday", "Sunday"))
} else if (day_type == "all") {
available_dates <- available_dates %>%
dplyr::mutate(weekday = weekdays(as.Date(day, "%m/%d/%Y")))
}
if (sampling == TRUE) {
mean <- available_dates %>%
dplyr:: mutate(month = lubridate::month(as.Date(day, "%m/%d/%Y")),
year = lubridate::year(as.Date(day, "%m/%d/%Y"))) %>%
dplyr::group_by(year) %>% dplyr::summarise(sum = dplyr::n()) %>%
dplyr::ungroup() %>%
dplyr::summarise(mean = mean(sum)) %>% dplyr::pull()
if (mean > 48) {
available_dates <- available_dates %>%
dplyr::mutate(month = lubridate::month(as.Date(day, "%m/%d/%Y")),
year = lubridate::year(as.Date(day, "%m/%d/%Y"))) %>%
dplyr::group_by(year, month, weekday) %>% dplyr::slice_sample(n = sample_weeks)
}
}
return(dates_vector <- available_dates$day)
}
ms2_dates_alt(station = station, stations_list = stations_list, attributes = attributes)
system("taskkill /im java.exe /f", intern=FALSE, ignore.stdout=FALSE)
gc()
stations_list[stations_list$type == analysis_type, ]
stations <- stations_list[stations_list$type == analysis_type, ]
stations_list[stations_list$Loc_ID == station, "dir_id"]
stations_list[stations_list$Loc_ID == station, "dir_id"]
direction_id <- stations_list[stations_list$Loc_ID == station, "dir_id"]
if (direction_id != "1-way") {
direction_vector <- "1-way"
} else {
direction_vector <- c(substr(direction_id, 1, 2), substr(direction_id, 3, 4))
}
if (direction_id == "1-way") {
direction_vector <- "1-way"
} else {
direction_vector <- c(substr(direction_id, 1, 2), substr(direction_id, 3, 4))
}
if (direction_id != "1-way") {
direction_vector <- "1-way"
} else {
direction_vector <- c(substr(direction_id, 1, 2), substr(direction_id, 3, 4))
}
if (direction_id == "1-way") {
direction_vector <- "1-way"
} else {
direction_vector <- c(substr(direction_id, 1, 2), substr(direction_id, 3, 4))
}
if (direction_id == "1-way") {
direction_vector <- c("1-way")
} else {
direction_vector <- c(substr(direction_id, 1, 2), substr(direction_id, 3, 4))
}
if (direction_id != "1-way") {
direction_vector <- c("1-way")
} else {
direction_vector <- c(substr(direction_id, 1, 2), substr(direction_id, 3, 4))
}
if (direction_id != "1-way") {
direction_vector <- ""
} else {
direction_vector <- c(substr(direction_id, 1, 2), substr(direction_id, 3, 4))
}
paste0("https://", dot,
".public.ms2soft.com/tcds/tcount_gcs.asp?offset=",
offset,
"&local_id=",
station, "_", direction,
"&a=",
a,
"&sdate=",
date,
"&jump_date=",
date,
"&classDate=&speedDate=&gapDate=&int=&type=class&count_type=class")
direction <- direction_vector
paste0("https://", dot,
".public.ms2soft.com/tcds/tcount_gcs.asp?offset=",
offset,
"&local_id=",
station, "_", direction,
"&a=",
a,
"&sdate=",
date,
"&jump_date=",
date,
"&classDate=&speedDate=&gapDate=&int=&type=class&count_type=class")
if (direction_id != "1-way") {
direction_vector <- "1-way"
} else {
direction_vector <- c(substr(direction_id, 1, 2), substr(direction_id, 3, 4))
}
stations_list <- ms2_readStations()
stations_list
View(stations_list)
if (direction_id != "1-way") {
direction_vector <- "1-way"
} else {
direction_vector <- c(substr(direction_id, 1, 2), substr(direction_id, 3, 4))
}
if (direction_id == "1-way") {
direction_vector <- "1-way"
} else {
direction_vector <- c(substr(direction_id, 1, 2), substr(direction_id, 3, 4))
}
direction_id <- stations_list[stations_list$Loc_ID == station, "dir_id"]
View(direction_id)
stations_list[stations_list$Loc_ID == station, "dir_id"]
direction_vector <- c(substr(direction_id, 1, 2), substr(direction_id, 3, 4))
if (direction_id == "1-way") {
direction_vector <- "1-way"
} else {
direction_vector <- c(substr(direction_id, 1, 2), substr(direction_id, 3, 4))
}
paste0("https://", dot,
".public.ms2soft.com/tcds/tcount_gcs.asp?offset=",
offset,
"&local_id=",
station, "_", direction,
"&a=",
a,
"&sdate=",
date,
"&jump_date=",
date,
"&classDate=&speedDate=&gapDate=&int=&type=class&count_type=class")
date
date <- dates_list[[1]]
date <- dates_list[[1]][1]
paste0("https://", dot,
".public.ms2soft.com/tcds/tcount_gcs.asp?offset=",
offset,
"&local_id=",
station, "_", direction,
"&a=",
a,
"&sdate=",
date,
"&jump_date=",
date,
"&classDate=&speedDate=&gapDate=&int=&type=class&count_type=class")
paste0("https://", dot,
".public.ms2soft.com/tcds/tcount_gcs.asp?offset=",
offset,
"&local_id=",
station,
"&a=",
a,
"&sdate=",
date,
"&jump_date=",
date,
"&classDate=&speedDate=&gapDate=&int=&type=class&count_type=class")
View(dates_list)
library(candmR)
ms2_all_data(dates_list, stations_list = stations_list, attributes = attributes)
stations_list
dates_list <- ms2_all_dates(stations_list = stations_list[5,], attributes = attributes)
View(dates_list)
ms2_all_data(dates_list, stations_list = stations_list[5,], attributes = attributes)
gc()
station <- "31H100"
stations_list[stations_list$Loc_ID == station, "dir_id"]
if (direction_id == "1-way") {
direction_vector <- "1-way"
} else {
direction_vector <- c(substr(direction_id, 1, 2), substr(direction_id, 3, 4))
}
direction_id <- stations_list[stations_list$Loc_ID == station, "dir_id"]
if (direction_id == "1-way") {
direction_vector <- "1-way"
} else {
direction_vector <- c(substr(direction_id, 1, 2), substr(direction_id, 3, 4))
}
direction_vector == "1-way"
if (direction_vector == "1-way") {
url <- paste0("https://", dot,
".public.ms2soft.com/tcds/tcount_gcs.asp?offset=",
offset,
"&local_id=",
station,
"&a=",
a,
"&sdate=",
date,
"&jump_date=",
date,
"&classDate=&speedDate=&gapDate=&int=&type=class&count_type=class")
} else {
url <- paste0("https://", dot,
".public.ms2soft.com/tcds/tcount_gcs.asp?offset=",
offset,
"&local_id=",
station, "_", direction,
"&a=",
a,
"&sdate=",
date,
"&jump_date=",
date,
"&classDate=&speedDate=&gapDate=&int=&type=class&count_type=class")
}
if (nrow(direction_vector) != 2) {
url <- paste0("https://", dot,
".public.ms2soft.com/tcds/tcount_gcs.asp?offset=",
offset,
"&local_id=",
station,
"&a=",
a,
"&sdate=",
date,
"&jump_date=",
date,
"&classDate=&speedDate=&gapDate=&int=&type=class&count_type=class")
} else {
url <- paste0("https://", dot,
".public.ms2soft.com/tcds/tcount_gcs.asp?offset=",
offset,
"&local_id=",
station, "_", direction,
"&a=",
a,
"&sdate=",
date,
"&jump_date=",
date,
"&classDate=&speedDate=&gapDate=&int=&type=class&count_type=class")
}
nrow(direction_vector)
length(direction_vector)
if (length(direction_vector) != 2) {
url <- paste0("https://", dot,
".public.ms2soft.com/tcds/tcount_gcs.asp?offset=",
offset,
"&local_id=",
station,
"&a=",
a,
"&sdate=",
date,
"&jump_date=",
date,
"&classDate=&speedDate=&gapDate=&int=&type=class&count_type=class")
} else {
url <- paste0("https://", dot,
".public.ms2soft.com/tcds/tcount_gcs.asp?offset=",
offset,
"&local_id=",
station, "_", direction,
"&a=",
a,
"&sdate=",
date,
"&jump_date=",
date,
"&classDate=&speedDate=&gapDate=&int=&type=class&count_type=class")
}
if (direction_id == "1-way") {
direction_vector <- "1-way"
} else {
direction_vector <- c(substr(direction_id, 1, 2), substr(direction_id, 3, 4))
}
direction <- "NB"
if (length(direction_vector) != 2) {
url <- paste0("https://", dot,
".public.ms2soft.com/tcds/tcount_gcs.asp?offset=",
offset,
"&local_id=",
station,
"&a=",
a,
"&sdate=",
date,
"&jump_date=",
date,
"&classDate=&speedDate=&gapDate=&int=&type=class&count_type=class")
} else {
url <- paste0("https://", dot,
".public.ms2soft.com/tcds/tcount_gcs.asp?offset=",
offset,
"&local_id=",
station, "_", direction,
"&a=",
a,
"&sdate=",
date,
"&jump_date=",
date,
"&classDate=&speedDate=&gapDate=&int=&type=class&count_type=class")
}
library(candmR)
ms2_all_data(dates_list, stations_list = stations_list[5,], attributes = attributes)
paste0(main_url,
"tcount.asp?offset=",
offset,
"&local_id=",
station,
"&a=",
a,
"&sdate=",
date)
paste0(main_url,
"tcount.asp?offset=",
offset,
"&local_id=",
station,
"_",
direction,"&a=",
a,
"&sdate=",
date)
getwd()
